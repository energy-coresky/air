#.yaml ///////////////////////////////////////////////////////////////////////////////////////
#._
+ @inc(.) ~/assets/database.yaml
#._

#.php =========================================================================
+ @preflight |
  $array = (object)$array;
  $array->ini_once = function () use ($array) {
      $p =& $array->tokens_def;
      $p = array_combine(array_map(fn($k) => constant("T_$k"), $p), $p);
      $p =& $array->tokens_use;
      $p = array_combine(array_map(fn($k) => constant("T_$k"), array_keys($p)), $p);
  };

version:   $PHP_VERSION_ID
php:       https://www.php.net/manual/
packagist: https://repo.packagist.org/p2/
coresky:   https://coresky.net/api

const: @csv __DIR__ __FILE__ __LINE__ __FUNCTION__ __CLASS__ __METHOD__ __NAMESPACE__ __TRAIT__

spec: @csv STDIN STDOUT STDERR __COMPILER_HALT_OFFSET__

definitions: {
  NAMESPACE: [], INTERFACE: [], TRAIT: [], ENUM: [], VAR: [], FUNCTION: [], CONST: [], DEFINE: [], CLASS: [], EVAL: []
}

types: @csv null bool int float string array object resource never void false true callable mixed iterable
type_alias: # https://www.php.net/manual/ru/language.types.type-system.php#language.types.type-system.alias
  mixed: object|resource|array|string|float|int|bool|null
  iterable: Traversable|array

soft: [enum, resource, numeric] # https://www.php.net/manual/ru/reserved.other-reserved-words.php

gt_74: @csv >
  AMPERSAND_FOLLOWED_BY_VAR_OR_VARARG
  AMPERSAND_NOT_FOLLOWED_BY_VAR_OR_VARARG
  NAME_RELATIVE
  NAME_QUALIFIED
  NAME_FULLY_QUALIFIED
  PUBLIC_SET PROTECTED_SET PRIVATE_SET
  ATTRIBUTE ENUM MATCH READONLY NULLSAFE_OBJECT_OPERATOR

tokens_def: @csv CLASS INTERFACE TRAIT ENUM FUNCTION CONST NAMESPACE
tokens_ign: [$T_WHITESPACE, $T_COMMENT, $T_DOC_COMMENT, $T_INLINE_HTML, $T_OPEN_TAG, $T_OPEN_TAG_WITH_ECHO]
tokens_use: {
  NEW: $T_CLASS, EXTENDS: $T_CLASS, IMPLEMENTS: $T_CLASS, INSTANCEOF: $T_CLASS, # INSTEADOF: $T_TRAIT,
  DOUBLE_COLON: [$T_FN, $T_DOUBLE_COLON],
  OBJECT_OPERATOR: [$T_FN, $T_VAR],
  NULLSAFE_OBJECT_OPERATOR: [$T_FN, $T_VAR],
}
tokens_name: [[$T_STRING, $T_NS_SEPARATOR]]

oc: {'{': '}', '(': ')', '[': ']'} # ->oc to mean Open/Close chars

color: # r g z y m j in sky.css
#.schemes
  w_base: {r:#f77, g:#00e, d:#000, c:#2b3, m:#93c, j:#000} # c-comment d-default j:#c41
  v_php:  {r:#d00, g:#070, d:#00b, c:#ff8000, m:#000, j:#c41} # native php highlight_string(..) function colors
  z_php:  {r:#d00, g:#070, d:#00b, c:#ff8000, m:#000, j:#c41}
  b_far:  {r:#ff5, g:#fff, d:#7ee, c:#b84, m:#888, j:#68a} # #c41
  x_far:  {r:#f77, g:#fff, d:#7ee, c:#68a, m:#888, j:#962}
#.schemes
background: @bang(= )
  z: 0=#fff -=#fdd +=#dfd *=#ffa .=#eee
  w: 0=#eee -=#fdd +=#dfd *=#ffd .=#eee
  v: 0=#eee -=#fdd +=#dfd *=#ffd .=#eee
  b: 0=#000 -=#511 +=#151 *=#551 .=#555
  x: 0=#115 -=#511 +=#151 *=#551 .=#555
pairs:
  w_base: v_php
  v_php:  w_base
  z_php:  v_php
  b_far:  x_far
  x_far:  b_far
#.php

#.html
spec: {'#comment':<!--%s-->, '#data':<![CDATA[%s]]>}
void: @csv !doctype br hr img input link meta area base col embed source track wbr param
omis: # tags omission rules
  - @csv li td th tr
  p: @csv p address article aside blockquote div dl fieldset footer h1 h2 h3 h4 h5 h6 header hr menu nav ol ul pre section table form
#.html

#.md
esc: "\`*_{}[]()<>#+-.!|^=~:"
code_type: @csv jet php css js html yaml bash # 2do saw
typ_1:   {'<![CDATA[': ']]>', '<!--': '-->', '<!': '>'}
typ_2:   @csv script pre style
blk_chr: {
  '-*_=': leaf_h2r, '#': leaf_h6,
  '-*+':  blk_ul, '0123456789': blk_ol, '>': blk_bq,
  '[':    in_square,
  '<':    leaf_html,
  '~`':   leaf_fenced,
  '':     leaf_p,
}
blk_re: [
  "/^(\d{1,9})(\.|\))(\s+|\z)/", # for blk_ol [0]
  "/^()([\*\-\+])(\s+|\z)/", # for blk_ul [1]
  "/^()(>)(\s*)/",           # for blk_bq [2]
]
in_chr: {
  '*_': in_ems, '~': in_del, '^': in_sup, '=': in_mark, ':': in_emoji_dl, '|': in_table,
  '[': in_square, '`': in_code,
}
email_re: "/^[a-z\d.!#$%&'*+/=?^_`{|}~-]+@[a-z\d](?:[a-z\d-]{0,61}[a-z\d])?(?:\.[a-z\d](?:[a-z\d-]{0,61}[a-z\d])?)*$/i"
tagfilter: @csv title textarea style xmp iframe noembed noframes script plaintext
tags: @csv {
  a: address article aside,        b: base basefont blockquote body,
  c: caption center col colgroup,  d: dd details dialog dir div dl dt,
  f: fieldset figcaption figure footer form frame frameset,
  h: h1 h2 h3 h4 h5 h6 head header hr html,       i: iframe,
  l: legend li link,               m: main menu menuitem,  n: nav noframes,
  o: ol optgroup option,   p: p param,     s: section source summary
  t: table tbody td tfoot th thead title tr track,   u: ul
}
#.md

#.js
keywords: @csv
  break case class catch const continue debugger default delete do else export extends finally for function if import in of
  instanceof let new return super switch this throw try typeof var void while with yield
other: @csv
  enum await implements package protected static interface private public
old: @csv
  abstract boolean byte char double final float goto int long native short synchronized transient volatile
chars: "!#%&()*+,-.:;<=>?@[\]^`{|}~"
#.js

#.define ================== this used in the sky_plan.php ========================
ENC:      UTF-8
zebra:    return @$i++ % 2 ? 'bgcolor="#eee"' : ""; # obsolete, delete in the future
DATE_DT:  Y-m-d H:i:s
RE_LOGIN: /^[a-z][a-z_\d]{1,19}$/i
RE_PASSW: /^\S{3,15}$/
RE_EMAIL: /^([\w\-]+\.)*[\w\-]+@([\w\-]+\.)+[a-z]{2,7}$/i
RE_PHONE: /^\+?\d{10,12}$/
TPL_FORM: <dl><dt>%s</dt><dd>%s</dd></dl>
TPL_CHECKBOX: <input type="checkbox" name="id[]" value="%s"%s />
TPL_HIDDEN: <input type="hidden" name="%s" value="%s" />
TPL_META: <meta name="%s" content="%s" />
#.define


#.system =========================================================================
- <fieldset><legend>Primary settings</legend>
- ['', [[<b><u>Production</u></b>, li]]]
trace_root: [Debug mode on production for `root` profile, chk]
trace_cli: [Use X-tracing for CLI, chk]
error_403: [Use 403 code for `die`, chk]
empty_die: [Empty response for `die`, chk]
gate_404: [Gate errors as 0.404 (soft), chk] #2do: clear all cache when changed
log_error: [Log ERROR, radio, [Off, On]]  #crash_log prod_error quiet_eerr
log_crash: [Log CRASH, radio, [Off, On]]
- [Hard cache, {
    cache_act: ['', radio, [Off, On]],
    cache_sec: ['Default TTL, seconds', number, style="width:100px", 300]
  }]
- </fieldset>
- <fieldset><legend>"Visitor's & users settings"</legend>
- [Cookie name, {
    c_name: ['', '', '', sky],
    c_upd: ['Cookie updates, minutes', number, style="width:100px", 60]
  }]
visit: ['One visit break after, off minutes', number, '', 5]
reg_req: [Users required for registrations, radio, [Both, Login, E-mail]]
- </fieldset>
#.system

#.cron =========================================================================
clear_nc: ["Visitor's cleaning (no cookie), days", number, '', 2]
clear_hc: ["Visitor's cleaning (has cookie), days", number, '', 10]
clear_ua: ["Visitor's cleaning (authed), days", number, '', 1000]
#.cron

#.phpman =========================================================================
+ {en:English, de:German, es:Spanish, fr:French, it:Italian, ja:Japanese,
  pt_BR:Brazilian Portuguese, ru:Russian, tr:Turkish, uk:Ukrainian, zh:Chinese (Simplified)}
#.phpman


#.zml =========================================================================
tags: @csv END DIRS FILE
#.zml

#.dev_cfg =========================================================================
dev:  [Set debug=0 for DEV-tools, chk]
err:  [Show suppressed PHP errors, chk]
cron: [Run cron when click on DEV instance, chk]
lgt:  [SkyLang table name, '', size="25"]
manual: [PHP manual language, select, @inc(.phpman)]
se:   [Search engine tpl, '', size="50"]
nopopup: [No dev-tools on soft 404, chk]
crash_to: ['Crash-redirect timeout, sec', number, '', 8]
php_hl: [HTML/PHP hightlight scheme, select, @keys(!) @path() @inc(.schemes)]
- @php Form::X([], '<hr>')
- ['Check static files for changes (file or path to *.js & *.css files), example: `m`', li]
static: ['', '', size="50"]
etc: ['Turn ON tracing for default_c::a_etc()', chk]
red_label: [Red label, radio, [Off, On]]
- [Save, submit]
#.dev_cfg

#.dev_app =========================================================================
+ @preflight ; # test preflight code
- [Application, {
    app: ['', '', size="11"],
    ver: ['', number, style="width:77px" step="0.0001"],
    0: [@php(tag(SKY::version()['app'][3] . ' from ' . date('c', SKY::version()['app'][0]))), ni]
  }]
- [Core, ni, @php SKY::CORE]
- [Save, submit]
#.dev_app

#.dev_form =========================================================================
+ @preflight($key, &$val) |
  ; # test preflight code
form1: @php Form::A(array_combine($key, $val), yml('dev.app', '+ @inc(dev_app)'))
form2: @php Form::A(SKY::$mem['d'][3], yml('dev.cfg', '+ @inc(dev_cfg)'))
#.dev_form

#.first_run =========================================================================
+ @php |
  <?php # Auto generated "First-Run" file by Coresky framework
  
#.first_run
